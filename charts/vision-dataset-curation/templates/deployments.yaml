apiVersion: apps/v1
kind: Deployment
metadata:
  name: vdc-mongodb
  namespace: {{ .Release.Namespace }}
  labels:
    app: vdc-mongodb
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 100%
  replicas: 1
  selector:
    matchLabels:
      app: vdc-mongodb
  template:
    metadata:
      name: vdc-mongodb
      labels:
        app: vdc-mongodb
    spec:
      containers:
        - name: vdc-mongodb
          image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
          imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
          ports:
            - name: mongodb
              containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: vdc-mongodb-secret
                  key: rootUser
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vdc-mongodb-secret
                  key: rootPassword
          resources: {{- toYaml .Values.mongodb.resources | nindent 12 }}

---
{{- if .Values.mongoExpress.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vdc-mongo-express
  namespace: {{ .Release.Namespace }}
  labels:
    app: vdc-mongo-express
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 100%
  replicas: 1
  selector:
    matchLabels:
      app: vdc-mongo-express
  template:
    metadata:
      name: vdc-mongo-express
      labels:
        app: vdc-mongo-express
    spec:
      containers:
        - name: vdc-mongo-express
          image: "{{ .Values.mongoExpress.image.repository }}:{{ .Values.mongoExpress.image.tag }}"
          imagePullPolicy: {{ .Values.mongoExpress.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8081
          env:
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              valueFrom:
                secretKeyRef:
                  name: vdc-mongodb-secret
                  key: rootUser
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              valueFrom:
                secretKeyRef:
                  name: vdc-mongodb-secret
                  key: rootPassword
            - name: ME_CONFIG_MONGODB_SERVER
              value: vdc-mongodb
            - name: ME_CONFIG_MONGODB_PORT
              value: "27017"
            - name: ME_CONFIG_MONGODB_ENABLE_ADMIN
              value: "true"
            - name: ME_CONFIG_SITE_BASEURL
              value: "/"
            - name: ME_CONFIG_BASICAUTH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: vdc-mongodb-secret
                  key: rootUser
            - name: ME_CONFIG_BASICAUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: vdc-mongodb-secret
                  key: rootPassword
            - name: ME_CONFIG_OPTIONS_EDITORTHEME
              value: "dark"
          resources: {{- toYaml .Values.mongoExpress.resources | nindent 12 }}
  {{- end }}


{{/*apiVersion: apps/v1*/}}
{{/*kind: Deployment*/}}
{{/*metadata:*/}}
{{/*  annotations:*/}}
{{/*  labels:*/}}
{{/*    app.kubernetes.io/instance: mongodb*/}}
{{/*    app.kubernetes.io/name: vdc-mongodb*/}}
{{/*    owner: teknoir*/}}
{{/*  name: vdc-mongodb*/}}
{{/*  namespace: demonstrations*/}}
{{/*spec:*/}}
{{/*  progressDeadlineSeconds: 600*/}}
{{/*  replicas: 1*/}}
{{/*  revisionHistoryLimit: 10*/}}
{{/*  selector:*/}}
{{/*    matchLabels:*/}}
{{/*      app.kubernetes.io/instance: mongodb*/}}
{{/*      app.kubernetes.io/name: vdc-mongodb*/}}
{{/*      owner: teknoir*/}}
{{/*  strategy:*/}}
{{/*    type: Recreate*/}}
{{/*  template:*/}}
{{/*    metadata:*/}}
{{/*      annotations:*/}}
{{/*        prometheus.io/path: /metrics*/}}
{{/*        prometheus.io/port: "9216"*/}}
{{/*        prometheus.io/scrape: "true"*/}}
{{/*        proxy.istio.io/config: '{"holdApplicationUntilProxyStarts": true }'*/}}
{{/*      creationTimestamp: null*/}}
{{/*      labels:*/}}
{{/*        app.kubernetes.io/instance: mongodb*/}}
{{/*        app.kubernetes.io/name: vdc-mongodb*/}}
{{/*        owner: teknoir*/}}
{{/*    spec:*/}}
{{/*      containers:*/}}
{{/*        - env:*/}}
{{/*            - name: MONGO_INITDB_ROOT_USERNAME*/}}
{{/*              value: teknoir*/}}
{{/*            - name: MONGO_INITDB_ROOT_PASSWORD*/}}
{{/*              value: 98jgs2LdOQC2*/}}
{{/*          image: mongo:6.0.6*/}}
{{/*          imagePullPolicy: IfNotPresent*/}}
{{/*          livenessProbe:*/}}
{{/*            failureThreshold: 3*/}}
{{/*            periodSeconds: 10*/}}
{{/*            successThreshold: 1*/}}
{{/*            tcpSocket:*/}}
{{/*              port: mongodb*/}}
{{/*            timeoutSeconds: 1*/}}
{{/*          name: vdc-mongodb*/}}
{{/*          ports:*/}}
{{/*            - containerPort: 27017*/}}
{{/*              name: vdc-mongodb*/}}
{{/*              protocol: TCP*/}}
{{/*          readinessProbe:*/}}
{{/*            failureThreshold: 3*/}}
{{/*            periodSeconds: 10*/}}
{{/*            successThreshold: 1*/}}
{{/*            tcpSocket:*/}}
{{/*              port: mongodb*/}}
{{/*            timeoutSeconds: 1*/}}
{{/*          startupProbe:*/}}
{{/*            failureThreshold: 3*/}}
{{/*            periodSeconds: 10*/}}
{{/*            successThreshold: 1*/}}
{{/*            tcpSocket:*/}}
{{/*              port: mongodb*/}}
{{/*            timeoutSeconds: 1*/}}
{{/*          terminationMessagePath: /dev/termination-log*/}}
{{/*          terminationMessagePolicy: File*/}}
{{/*          volumeMounts:*/}}
{{/*            - mountPath: /docker-entrypoint-initdb.d/create_collections.js*/}}
{{/*              name: initconfig*/}}
{{/*              subPath: create_collections.js*/}}
{{/*            - mountPath: /data/db*/}}
{{/*              name: data*/}}
{{/*        - args:*/}}
{{/*            - --mongodb.uri=mongodb://teknoir:98jgs2LdOQC2@mongodb:27017/admin*/}}
{{/*            - --discovering-mode*/}}
{{/*            - --collect-all*/}}
{{/*            - --compatible-mode*/}}
{{/*          image: docker.io/bitnami/mongodb-exporter:0.40.0*/}}
{{/*          imagePullPolicy: Always*/}}
{{/*          name: vdc-mongodb-exporter*/}}
{{/*          ports:*/}}
{{/*            - containerPort: 9216*/}}
{{/*              protocol: TCP*/}}
{{/*          terminationMessagePath: /dev/termination-log*/}}
{{/*          terminationMessagePolicy: File*/}}
{{/*      dnsPolicy: ClusterFirst*/}}
{{/*      restartPolicy: Always*/}}
{{/*      schedulerName: default-scheduler*/}}
{{/*      terminationGracePeriodSeconds: 30*/}}
{{/*      volumes:*/}}
{{/*        - configMap:*/}}
{{/*            defaultMode: 420*/}}
{{/*            name: vdc-mongodb-initdb*/}}
{{/*          name: initconfig*/}}
{{/*        - name: data*/}}
{{/*          persistentVolumeClaim:*/}}
{{/*            claimName: mongodb*/}}